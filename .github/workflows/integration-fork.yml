# Run integration tests after "/ok-to-test" approval from someone with repo write access
on:
  repository_dispatch:
    types: [ok-to-test-command]

name: Integration tests from fork PR

jobs:
  integration-fork:
    runs-on: ubuntu-latest
    steps:

    - name: Fork based /ok-to-test checkout
      uses: actions/checkout@v2
      with:
        ref: 'refs/pull/${{ github.event.client_payload.pull_request.number }}/merge'

    # <insert an integration test needing secrets>
    - run: |
        echo "Integration tests... success!"
        echo '::set-env name=conclusion::success'

    # Set check on PR
    - uses: actions/github-script@v1
      env:
        head_sha: ${{ steps.get-sha.outputs.result }}
        number: ${{ github.event.client_payload.pull_request.number }}
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { data: pull } = await github.pulls.get({
            ...context.repo,
            pull_number: process.env.number
          });
          const ref = pull.head.sha;

          github.checks.create({
            ...context.repo,
            name: 'Integration tests',
            head_sha: ref,
            status: 'completed',
            conclusion: process.env.conclusion
          })

    # Comment on the PR to show that repository secrets can be used
    - name: Silly secrets availability POC
      uses: actions/github-script@v1
      env:
        number: ${{ github.event.client_payload.pull_request.number }}
        secret-message: ${{ secrets.MESSAGE }}
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.issues.createComment({
            issue_number: process.env.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `Well, hey there! ðŸ¤  Psst, secret message: ${process.env.secret-message}.`
          })